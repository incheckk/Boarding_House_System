-- Tenant Status (e.g., Active, Inactive, Evicted)
CREATE TABLE Tenant_Status (
    TSTAT_ID SERIAL PRIMARY KEY,
    TSTAT_DESC VARCHAR(50) NOT NULL UNIQUE
);

-- Room Status (e.g., Occupied, Vacant, Reserved)
CREATE TABLE Room_Status (
    RSTAT_ID SERIAL PRIMARY KEY,
    RSTAT_DESC VARCHAR(50) NOT NULL UNIQUE
);

-- Room information
CREATE TABLE Room (
    ROOM_ID SERIAL PRIMARY KEY,
    ROOM_NUMBER VARCHAR(20) NOT NULL UNIQUE,
    ROOM_SIZE VARCHAR(50),
    ROOM_RATE NUMERIC(10,2) NOT NULL,
    RSTAT_ID INT NOT NULL REFERENCES Room_Status(RSTAT_ID) ON UPDATE CASCADE
);

-- Tenant information
CREATE TABLE Tenant (
    TENANT_ID SERIAL PRIMARY KEY,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    MIDDLE_NAME VARCHAR(50),
    NUMBER VARCHAR(20) NOT NULL,
    EMERGENCY_NUMBER VARCHAR(20),
    EMAIL VARCHAR(100) UNIQUE,
    TSTAT_ID INT NOT NULL REFERENCES Tenant_Status(TSTAT_ID) ON UPDATE CASCADE
);

-- Link table: Room â†” Tenant (supports families/multiple tenants per room)
CREATE TABLE RoomTenant (
    ROOM_TENANT_ID SERIAL PRIMARY KEY,
    TENANT_ID INT NOT NULL REFERENCES Tenant(TENANT_ID) ON DELETE CASCADE,
    ROOM_ID INT NOT NULL REFERENCES Room(ROOM_ID) ON DELETE CASCADE,
    CHECK_IN_DATE DATE NOT NULL,
    CHECK_OUT_DATE DATE,
    ROLE_IN_ROOM VARCHAR(50) DEFAULT 'Member'
);

-- Reservation system
CREATE TABLE Tenant_Reservation_Status (
    RESTAT_ID SERIAL PRIMARY KEY,
    RESTAT_DESC VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE Reservation (
    RESERVATION_ID SERIAL PRIMARY KEY,
    RESERVATION_DATE DATE NOT NULL DEFAULT CURRENT_DATE,
    RESTAT_ID INT NOT NULL REFERENCES Tenant_Reservation_Status(RESTAT_ID) ON UPDATE CASCADE,
    TENANT_ID INT NOT NULL REFERENCES Tenant(TENANT_ID) ON DELETE CASCADE,
    ROOM_ID INT NOT NULL REFERENCES Room(ROOM_ID) ON DELETE CASCADE
);

-- Amenities (like WiFi, Water, etc.)
CREATE TABLE Amenities (
    AMEN_ID SERIAL PRIMARY KEY,
    AMEN_NAME VARCHAR(50) NOT NULL UNIQUE,
    AMEN_DESC VARCHAR(255)
);

CREATE TABLE RoomAmenities (
    ROOM_ID INT NOT NULL REFERENCES Room(ROOM_ID) ON DELETE CASCADE,
    AMEN_ID INT NOT NULL REFERENCES Amenities(AMEN_ID) ON DELETE CASCADE,
    PRIMARY KEY (ROOM_ID, AMEN_ID)
);

-- Payment Status (Pending, Paid, Overdue)
CREATE TABLE Payment_Status (
    PSTAT_ID SERIAL PRIMARY KEY,
    PSTAT_DESC VARCHAR(50) NOT NULL UNIQUE
);

-- Billing / Payments (only rent, no utilities)
CREATE TABLE Billing (
    PAYMENT_ID SERIAL PRIMARY KEY,
    TENANT_ID INT NOT NULL REFERENCES Tenant(TENANT_ID) ON DELETE CASCADE,
    ROOM_ID INT NOT NULL REFERENCES Room(ROOM_ID) ON DELETE CASCADE,
    RENT_AMOUNT NUMERIC(10,2) NOT NULL,
    PAYMENT_DATE DATE,
    DUE_DATE DATE NOT NULL,
    REMARKS VARCHAR(255),
    PSTAT_ID INT NOT NULL REFERENCES Payment_Status(PSTAT_ID) ON UPDATE CASCADE
);

-- Visitor Log
CREATE TABLE VisitorLog (
    LOG_ID SERIAL PRIMARY KEY,
    VISITOR_NAME VARCHAR(100) NOT NULL,
    VISIT_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PURPOSE VARCHAR(255),
    TENANT_ID INT NOT NULL REFERENCES Tenant(TENANT_ID) ON DELETE CASCADE
);

-- Users (System Accounts: Admin, Manager, Staff)
CREATE TABLE Users (
    USER_ID SERIAL PRIMARY KEY,
    USERNAME VARCHAR(50) NOT NULL UNIQUE,
    PASSWORD_HASH VARCHAR(255) NOT NULL,
    ROLE VARCHAR(50) NOT NULL CHECK (ROLE IN ('Owner', 'Manager', 'Staff'))
);
